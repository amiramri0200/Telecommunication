clc
clear 
close all
%% 
c1 = 0.0001;
c2 = .1;
alpha_m = 10;
x_k = [1 2 2 2] ;
iteration = 0;
khata = 1;
%% assigning the function as symbolic so we can calculate the gradient of it
syms x1 x2 x3 x4 alpha
powell_function = (x1+10*x2)^2+5*(x3-x4)^2+(x2-2*x3)^4+10*(x1-x4)^4 ;
powell_gradient = gradient(powell_function) ;
powell_hessi = hessian(powell_function) ;
powell_hessian_inverse = inv(powell_hessi) ;
gra = gradient(Rosenbrocks_Func);
%% the while loop for calculating the minimum x by the given accuracy t
Gradient = 1;
while norm(Gradient) > 0.1
    
    x_k1 = x_k;
%     
%     Gradient(1,1) = gra_F1_x1(x_k(1),x_k(2));%calculating the gradient of
%     Gradient(2,1) = gra_F1_x2(x_k(1),x_k(2)); %the fucntion at each iteration
     Gradient = double(subs(powell_gradient,[x1 x2 x3 x4],{x_k}));
  
     temp1 = x_k - alpha*transpose(Gradient);%note that we are using the transpose of the Gradient
                                             %becous we are actually using the
                                             %transpose of points
                                       
    temp = subs(powell_function,[x1 x2 x3 x4],temp1);
    
    [alpha_k]= Linesearch(alpha_m,c1,c2,temp,alpha);
    
    x_k = double(x_k-alpha_k*transpose(Gradient));
    
    final_value =double(subs(powell_function,[x1 x2 x3 x4],{x_k}))
    
    iteration = iteration + 1 ;
    
    khata = x_k1-x_k ;
end
iteration
